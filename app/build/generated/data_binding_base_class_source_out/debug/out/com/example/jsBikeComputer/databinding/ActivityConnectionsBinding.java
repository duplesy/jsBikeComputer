// Generated by view binder compiler. Do not edit!
package com.example.jsBikeComputer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jsBikeComputer.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConnectionsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout activityConnections;

  @NonNull
  public final MaterialButton loginButton;

  @NonNull
  public final BottomNavigationView navView;

  @NonNull
  public final TextView profileText;

  @NonNull
  public final TextView statsText;

  @NonNull
  public final TextView textNotifications;

  @NonNull
  public final MaterialButton uploadButton;

  private ActivityConnectionsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout activityConnections, @NonNull MaterialButton loginButton,
      @NonNull BottomNavigationView navView, @NonNull TextView profileText,
      @NonNull TextView statsText, @NonNull TextView textNotifications,
      @NonNull MaterialButton uploadButton) {
    this.rootView = rootView;
    this.activityConnections = activityConnections;
    this.loginButton = loginButton;
    this.navView = navView;
    this.profileText = profileText;
    this.statsText = statsText;
    this.textNotifications = textNotifications;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConnectionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConnectionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_connections, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConnectionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout activityConnections = (ConstraintLayout) rootView;

      id = R.id.loginButton;
      MaterialButton loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.nav_view;
      BottomNavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.profileText;
      TextView profileText = ViewBindings.findChildViewById(rootView, id);
      if (profileText == null) {
        break missingId;
      }

      id = R.id.statsText;
      TextView statsText = ViewBindings.findChildViewById(rootView, id);
      if (statsText == null) {
        break missingId;
      }

      id = R.id.text_notifications;
      TextView textNotifications = ViewBindings.findChildViewById(rootView, id);
      if (textNotifications == null) {
        break missingId;
      }

      id = R.id.uploadButton;
      MaterialButton uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new ActivityConnectionsBinding((ConstraintLayout) rootView, activityConnections,
          loginButton, navView, profileText, statsText, textNotifications, uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
